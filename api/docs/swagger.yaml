definitions:
  models.Activity:
    properties:
      activity:
        type: boolean
      id:
        type: string
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.Student:
    properties:
      age:
        type: string
      external_id:
        type: string
      first_name:
        type: string
      id:
        type: string
      isactive:
        type: boolean
      last_name:
        type: string
      mail:
        type: string
      pasword:
        type: string
      phone:
        type: string
    type: object
  models.Subject:
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  models.Teacher:
    properties:
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      mail:
        type: string
      phone:
        type: string
      start_working:
        type: string
      subject_id:
        type: string
    type: object
  models.Timetable:
    properties:
      from_date:
        type: string
      id:
        type: string
      student_id:
        type: string
      subject_id:
        type: string
      teacher_id:
        type: string
      to_date:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /student:
    post:
      consumes:
      - application/json
      description: This api creates a student and returns its id
      parameters:
      - description: student
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: creates a student
      tags:
      - student
  /student/:
    get:
      consumes:
      - application/json
      description: This api get all students
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: get all students
      tags:
      - student
  /student/{external_id}:
    get:
      consumes:
      - application/json
      description: This api get student and returns its
      parameters:
      - description: external_id
        in: path
        name: external_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: get one student
      tags:
      - student
  /student/{id}:
    delete:
      consumes:
      - application/json
      description: This api for delete student
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: delete one student
      tags:
      - student
  /student/activity/{id}:
    patch:
      consumes:
      - application/json
      description: This api updates student activity and returns its id
      parameters:
      - description: student id
        in: path
        name: id
        required: true
        type: string
      - description: student activity
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/models.Activity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: updates student activity
      tags:
      - student
  /student/getlesson/{id}:
    get:
      consumes:
      - application/json
      description: This api get lesson now and returns its
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: get lesson now
      tags:
      - student
  /student/update/{id}:
    put:
      consumes:
      - application/json
      description: This api updates a student and returns its id
      parameters:
      - description: student
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: updates a student
      tags:
      - student
  /subject:
    post:
      consumes:
      - application/json
      description: This api creates a subject and returns its id
      parameters:
      - description: subject
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/models.Subject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: creates a subject
      tags:
      - subject
  /subject/:
    get:
      consumes:
      - application/json
      description: This api get all subjects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: get all subjects
      tags:
      - subject
  /subject/{external_id}:
    get:
      consumes:
      - application/json
      description: This api get subject and returns its
      parameters:
      - description: external_id
        in: path
        name: external_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: get one subject
      tags:
      - subject
  /subject/{id}:
    delete:
      consumes:
      - application/json
      description: This api for delete subject
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: delete one subject
      tags:
      - subject
  /subject/update/{id}:
    put:
      consumes:
      - application/json
      description: This api updates a subject and returns its id
      parameters:
      - description: subject
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/models.Subject'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: updates a subject
      tags:
      - subject
  /teacher:
    get:
      consumes:
      - application/json
      description: This api get all teachers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: get all teachers
      tags:
      - teacher
    post:
      consumes:
      - application/json
      description: This api creates a teacher and returns its id
      parameters:
      - description: teacher
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.Teacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: creates a teacher
      tags:
      - teacher
  /teacher/{id}:
    delete:
      consumes:
      - application/json
      description: This api for delete teacher
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: delete one teacher
      tags:
      - teacher
    get:
      consumes:
      - application/json
      description: This api get teacher and returns its
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: get one teacher
      tags:
      - teacher
  /teacher/getlesson/{id}:
    get:
      consumes:
      - application/json
      description: This api get lesson now and returns its
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: get lesson now
      tags:
      - teacher
  /teacher/update/{id}:
    put:
      consumes:
      - application/json
      description: This api updates a teacher and returns its id
      parameters:
      - description: teacher
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.Teacher'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: updates a teacher
      tags:
      - teacher
  /timetable:
    post:
      consumes:
      - application/json
      description: This api creates a timetable and returns its id
      parameters:
      - description: timetable
        in: body
        name: timetable
        required: true
        schema:
          $ref: '#/definitions/models.Timetable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: creates a timetable
      tags:
      - timetable
  /timetable/{id}:
    delete:
      consumes:
      - application/json
      description: This api for delete timetable
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: delete one timetable
      tags:
      - timetable
    get:
      consumes:
      - application/json
      description: This api get timetable and returns its
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: get one timetable
      tags:
      - timetable
  /timetable/update/{id}:
    put:
      consumes:
      - application/json
      description: This api updates a timetable and returns its id
      parameters:
      - description: timetable
        in: body
        name: timetable
        required: true
        schema:
          $ref: '#/definitions/models.Timetable'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: updates a timetable
      tags:
      - timetable
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
